/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */

/*
 * PreferencesDialog.java
 *
 * Created on May 16, 2010, 12:07:59 AM
 */

package twitz.dialogs;

import twitz.*;
import java.awt.event.WindowEvent;
import java.awt.event.WindowListener;
import java.util.Enumeration;
import java.util.Properties;
import java.util.Vector;
import javax.swing.event.TableModelEvent;
import javax.swing.event.TableModelListener;
import javax.swing.table.DefaultTableColumnModel;
import javax.swing.table.DefaultTableModel;
import org.jdesktop.application.Action;
import org.jdesktop.application.Task;
import twitz.util.SettingsManager;

/**
 *
 * @author mistik1
 */
public class PreferencesDialog extends javax.swing.JDialog {

    /** Creates new form PreferencesDialog */
    public PreferencesDialog(java.awt.Frame parent, boolean modal/*, SettingsManager c*/) {
        super(parent, modal);
		//config = c;
		vHeaders.add("T");
		vHeaders.add("Config");
		vHeaders.add("Values");
        initComponents();
		loadTable();
		DefaultTableColumnModel cModel = (DefaultTableColumnModel)tblConfig.getColumnModel();
		cModel.getColumn(0).setMaxWidth(10);
		DefaultTableModel mModel = (DefaultTableModel)tblConfig.getModel();
		mModel.addTableModelListener(new TableModelListener() {

			public void tableChanged(TableModelEvent e)
			{
				int t = e.getType();
				if(t == TableModelEvent.INSERT || t == TableModelEvent.UPDATE ) {
					btnApply.setEnabled(true);
				}
				//throw new UnsupportedOperationException("Not supported yet.");
			}
		});
		this.addWindowListener(new WindowListener() {

			public void windowOpened(WindowEvent e)
			{
				//throw new UnsupportedOperationException("Not supported yet.");
			}

			public void windowClosing(WindowEvent e)
			{
				//throw new UnsupportedOperationException("Not supported yet.");
			}

			public void windowClosed(WindowEvent e)
			{
				//throw new UnsupportedOperationException("Not supported yet.");
			}

			public void windowIconified(WindowEvent e)
			{
				//throw new UnsupportedOperationException("Not supported yet.");
			}

			public void windowDeiconified(WindowEvent e)
			{
				//throw new UnsupportedOperationException("Not supported yet.");
			}

			public void windowActivated(WindowEvent e)
			{
				btnApply.setEnabled(false);
				//throw new UnsupportedOperationException("Not supported yet.");
			}

			public void windowDeactivated(WindowEvent e)
			{
				//throw new UnsupportedOperationException("Not supported yet.");
			}
		});
		//cModel.getColumn(1).setMaxWidth(400);
		//tblConfig.setRowHeight(30);
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        tblConfig = new javax.swing.JTable();
        btnOk = new javax.swing.JButton();
        btnApply = new javax.swing.JButton();
        btnCancel = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        org.jdesktop.application.ResourceMap resourceMap = org.jdesktop.application.Application.getInstance(twitz.TwitzApp.class).getContext().getResourceMap(PreferencesDialog.class);
        setTitle(resourceMap.getString("Form.title")); // NOI18N
        setName("Form"); // NOI18N

        jScrollPane1.setName("jScrollPane1"); // NOI18N

        tblConfig.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null}
            },
            new String [] {
                "T", "Config", "Value"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class, java.lang.String.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, true
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        tblConfig.setName("tblConfig"); // NOI18N
        jScrollPane1.setViewportView(tblConfig);

        javax.swing.ActionMap actionMap = org.jdesktop.application.Application.getInstance(twitz.TwitzApp.class).getContext().getActionMap(PreferencesDialog.class, this);
        btnOk.setAction(actionMap.get("btnOkClicked")); // NOI18N
        btnOk.setIcon(resourceMap.getIcon("btnOk.icon")); // NOI18N
        btnOk.setText(resourceMap.getString("btnOk.text")); // NOI18N
        btnOk.setName("btnOk"); // NOI18N

        btnApply.setAction(actionMap.get("applyChanges")); // NOI18N
        btnApply.setIcon(resourceMap.getIcon("btnApply.icon")); // NOI18N
        btnApply.setText(resourceMap.getString("btnApply.text")); // NOI18N
        btnApply.setName("btnApply"); // NOI18N

        btnCancel.setAction(actionMap.get("cancelEdit")); // NOI18N
        btnCancel.setIcon(resourceMap.getIcon("btnCancel.icon")); // NOI18N
        btnCancel.setText(resourceMap.getString("btnCancel.text")); // NOI18N
        btnCancel.setName("btnCancel"); // NOI18N

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 394, Short.MAX_VALUE)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(btnOk)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 68, Short.MAX_VALUE)
                        .addComponent(btnApply)
                        .addGap(69, 69, 69)
                        .addComponent(btnCancel)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 196, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 13, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnOk)
                    .addComponent(btnCancel)
                    .addComponent(btnApply))
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    /**
    * @param args the command line arguments
    */
    public static void main(String args[]) {
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                PreferencesDialog dialog = new PreferencesDialog(new javax.swing.JFrame(), true);
                dialog.addWindowListener(new java.awt.event.WindowAdapter() {
					@Override
                    public void windowClosing(java.awt.event.WindowEvent e) {
                        System.exit(0);
                    }
                });
                dialog.setVisible(true);
            }
        });
    }

	public void loadTable() {
		Vector vConfig = new Vector();
		Enumeration en = config.getKeys();
		while(en.hasMoreElements()) {
			//Process keys for inclusion in dialog
			String key = (String)en.nextElement();
			if(key.endsWith(".cfgdesc") || key.endsWith(".cfgtype")) {
				continue; //skip to next iteration
			}
			if (!config.getString(key + ".cfgtype").equals("NULL"))
			{
				Vector row = new Vector();
				row.add(key);
				row.add(config.getString(key + ".cfgdesc"));
				row.add(config.getString(key));
				vConfig.add(row);
			}
		}
		DefaultTableModel model = (DefaultTableModel)tblConfig.getModel();
		model.setDataVector(vConfig, vHeaders);
		tblConfig.getColumnModel().getColumn(2).setCellEditor(new BrowseCellEditor());
	}

	@Action
	public void cancelEdit()
	{
		dispose();
	}

	@Action
	public void btnOkClicked()
	{
		saveChanges();
		dispose();
	}

	//@SuppressWarnings("empty-statement")
	public void saveChanges() {
		DefaultTableModel model = (DefaultTableModel)tblConfig.getModel();
		Vector vData = model.getDataVector();
		int size = vData.size();
		Properties p = new Properties();
		for(int i=0; i < size; i++) {
			Vector row = (Vector)vData.get(i);
			String key = row.get(0)+"";
			String value = row.get(2)+"";
			p.setProperty(key, value);
		}
		config.setProperty(p);
	}

	@Action
	public void applyChanges() {
		saveChanges();
		btnApply.setEnabled(false);
	}

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnApply;
    private javax.swing.JButton btnCancel;
    private javax.swing.JButton btnOk;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable tblConfig;
    // End of variables declaration//GEN-END:variables
	SettingsManager config = SettingsManager.getInstance();
	private Vector vHeaders = new Vector();
}
