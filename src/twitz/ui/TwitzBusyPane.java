/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */

/*
 * TwitzBusyPane.java
 *
 * Created on Jul 25, 2010, 9:49:17 PM
 */

package twitz.ui;

import java.awt.Rectangle;
import java.awt.event.MouseEvent;
import java.awt.event.MouseListener;
import javax.swing.JLayeredPane;
import org.apache.log4j.Logger;
import org.jdesktop.application.Action;
import org.jdesktop.swingx.JXPanel;

/**
 *
 * @author Andrew Williams
 */
public class TwitzBusyPane extends JXPanel implements MouseListener{

	private org.jdesktop.application.ResourceMap resourceMap = twitz.TwitzApp.getContext().getResourceMap(TwitzBusyPane.class);
	private javax.swing.ActionMap actionMap = twitz.TwitzApp.getContext().getActionMap(TwitzBusyPane.class, this);
	private Logger logger = Logger.getLogger(TwitzBusyPane.class);
	private javax.swing.JInternalFrame frame;
	private javax.swing.JComponent box;
	private javax.swing.JRootPane boxParent;
	private java.awt.Component myGlassPane;
	private javax.swing.SwingWorker job;
	private boolean blocked = false;
	private final BlockingMode mode;
	private enum BlockingMode {
		FRAME,
		COMPONENT
	}

    /**
	 * Creates new form TwitzBusyPane
	 * @param blockingFrame The JInternalFrame you want to block usually a {@link twitz.TwitzMainView}
	 * @param worker A {@code javax.swing.SwingWorker} that is used with the cancel button, If {@code worker}
	 * is null the cancel button will be disabled
	 */
    public TwitzBusyPane(javax.swing.JInternalFrame blockingFrame, javax.swing.SwingWorker worker)
	{
		this.frame = blockingFrame;
		this.job = worker;
        initComponents();
		this.btnCancel.setVisible(!(job == null));
		this.mode = BlockingMode.FRAME;
		initDefaults(mode);
    }

	/**
	 * Creates new form TwitzBusyPane
	 * @param blockingFrame The {@code javax.swing.JComponent} you want to block.
	 * @param worker A {@code javax.swing.SwingWorker} that is used with the cancel button, If {@code worker}
	 * is null the cancel button will be disabled
	 */
	public TwitzBusyPane(javax.swing.JComponent blockingBox, javax.swing.SwingWorker worker)
	{
		this.box = blockingBox;
		this.job = worker;
		initComponents();
		this.btnCancel.setVisible(!(job == null));
		this.mode = BlockingMode.COMPONENT;
		initDefaults(mode);
	}

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    private void initComponents() {//GEN-BEGIN:initComponents

        jXPanel1 = new org.jdesktop.swingx.JXPanel();
        busyLabel = new org.jdesktop.swingx.JXBusyLabel();
        btnCancel = new javax.swing.JButton();

        
        setToolTipText(resourceMap.getString("TwitzBusyPane.toolTipText")); // NOI18N
        setAlpha(0.5F);
        setFocusable(false);
        setName("TwitzBusyPane"); // NOI18N
        setLayout(new java.awt.GridBagLayout());

        jXPanel1.setName("jXPanel1"); // NOI18N
        jXPanel1.setPreferredSize(new java.awt.Dimension(150, 34));

        busyLabel.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        busyLabel.setText(resourceMap.getString("busyLabel.text")); // NOI18N
        busyLabel.setDirection(org.jdesktop.swingx.JXBusyLabel.Direction.RIGHT);
        busyLabel.setHorizontalTextPosition(javax.swing.SwingConstants.LEADING);
        busyLabel.setName("busyLabel"); // NOI18N
        jXPanel1.add(busyLabel);

        
        btnCancel.setAction(actionMap.get("cancel")); // NOI18N
        btnCancel.setIcon(resourceMap.getIcon("btnCancel.icon")); // NOI18N
        btnCancel.setText(resourceMap.getString("btnCancel.text")); // NOI18N
        btnCancel.setMaximumSize(new java.awt.Dimension(26, 26));
        btnCancel.setName("btnCancel"); // NOI18N
        btnCancel.setPreferredSize(new java.awt.Dimension(25, 25));
        jXPanel1.add(btnCancel);

        add(jXPanel1, new java.awt.GridBagConstraints());
    }//GEN-END:initComponents

	private void initDefaults(BlockingMode m)
	{
		busyLabel.setBusy(true);
		if(job != null)
			this.addMouseListener(this);
		btnCancel.setToolTipText(resourceMap.getString("btnCancel.toolTipText"));
		setAlpha(0.9F);
		jXPanel1.setAlpha(1.0F);
		if(m != null)
		{
			switch(m)
			{
				case FRAME:
					this.myGlassPane = frame.getGlassPane();
				break;
				case COMPONENT:
					boxParent = box.getRootPane();
//					if(boxParent != null)
//						myGlassPane = boxParent.getGlassPane();
//					else
//						logger.error("Null root pane");
//					if(myGlassPane == null)
//						logger.error("null glass pane");
				break;
			}
		}
	}

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnCancel;
    private org.jdesktop.swingx.JXBusyLabel busyLabel;
    private org.jdesktop.swingx.JXPanel jXPanel1;
    // End of variables declaration//GEN-END:variables

	public void setLabelText(String text)
	{
		busyLabel.setText(text);
	}

	public void block()
	{
		if (mode != null && !blocked)
		{
			switch (mode)
			{
				case FRAME:
					if (myGlassPane != null && !(myGlassPane instanceof TwitzBusyPane) && !blocked)
					{
						frame.setGlassPane(this);
						this.setVisible(true);
						blocked = true;
					}
					break;
				case COMPONENT:
					logger.debug("Blocking box "+box.getName());
					box.setEnabled(false);
					if(box instanceof javax.swing.JLayeredPane)
					{
						JLayeredPane pane = (JLayeredPane)box;
						pane.setLayer(this, javax.swing.JLayeredPane.MODAL_LAYER);
						this.setBounds(pane.getBounds());
						pane.add(this);
						logger.debug("current layer = "+JLayeredPane.getLayer(this));
						//pane.moveToFront(this);
					}
					busyLabel.setVisible(true);
					blocked = true;
//					if (myGlassPane != null && !(myGlassPane instanceof TwitzBusyPane) && !blocked)
//					{
//						boxParent.setGlassPane(this);
//						this.setVisible(true);
//						blocked = true;
//					}
					break;
			}
		}
	}

	public void unblock()
	{
		if (mode != null && blocked)
		{
			switch(mode)
			{
				case FRAME:
					if (myGlassPane != null && !(myGlassPane instanceof TwitzBusyPane) && blocked)
					{
						frame.setGlassPane(myGlassPane);
						this.setVisible(false);
						blocked = false;
					}
				break;
				case COMPONENT:
					logger.debug("Un-blocking box "+box.getName());
					box.setEnabled(true);
					busyLabel.setVisible(false);
					if(box instanceof javax.swing.JLayeredPane)
					{
						JLayeredPane pane = (JLayeredPane)box;
						pane.remove(this);
					}
					box.validate();
					blocked = false;
//					if (myGlassPane != null && !(myGlassPane instanceof TwitzBusyPane) && blocked)
//					{
//						boxParent.setGlassPane(myGlassPane);
//						this.setVisible(false);
//						blocked = false;
//					}
					break;
			}
		}
	}

	@Action
	public void cancel()
	{
		if(!job.isCancelled() && !job.isDone())
		{
			try
			{
				job.cancel(true);
			}
			catch(Exception e)
			{
				logger.error(e.getLocalizedMessage());
			}
		}
		logger.debug("cancel() MMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMM");
		unblock();
	}

	public void mouseClicked(MouseEvent e)
	{
		Rectangle button = btnCancel.getBounds();
		if(button.contains(e.getPoint()))
		{
			btnCancel.dispatchEvent(e);
		}
		//throw new UnsupportedOperationException("Not supported yet.");
	}

	public void mousePressed(MouseEvent e)
	{
	//	Rectangle button = btnCancel.getBounds();
	//	if(button.contains(e.getPoint()))
	//	{
	//		btnCancel.dispatchEvent(e);
	//	}
		//throw new UnsupportedOperationException("Not supported yet.");
	}

	public void mouseReleased(MouseEvent e)
	{
	//	Rectangle button = btnCancel.getBounds();
	//	if(button.contains(e.getPoint()))
	//	{
	//		btnCancel.dispatchEvent(e);
	//	}
		//throw new UnsupportedOperationException("Not supported yet.");
	}

	public void mouseEntered(MouseEvent e)
	{
	//	Rectangle button = btnCancel.getBounds();
	//	if(button.contains(e.getPoint()))
	//	{
	//		btnCancel.dispatchEvent(e);
	//	}
		//throw new UnsupportedOperationException("Not supported yet.");
	}

	public void mouseExited(MouseEvent e)
	{
		//throw new UnsupportedOperationException("Not supported yet.");
	}


}
