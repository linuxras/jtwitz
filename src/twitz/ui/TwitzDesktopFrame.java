/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */

/*
 * TwitzDesktopFrame.java
 *
 * Created on Jul 18, 2010, 4:10:40 PM
 */

package twitz.ui;

import java.util.Collections;
import java.util.Map;
import java.util.TreeMap;
import javax.swing.JDesktopPane;
import javax.swing.JDialog;
import org.jdesktop.application.Action;
import twitz.TwitzApp;
import twitz.ui.dialogs.PreferencesDialog;
import twitz.ui.dialogs.TwitzAboutBox;

/**
 *
 * @author mistik1
 */
public class TwitzDesktopFrame extends javax.swing.JFrame {
	
	private TwitzApp mainApp;
	private JDialog aboutBox;
	private PreferencesDialog prefs;
	private TwitzDesktopFrame instance;
	org.jdesktop.application.ResourceMap resourceMap = twitz.TwitzApp.getContext().getResourceMap(TwitzDesktopFrame.class);
	javax.swing.ActionMap actionMap = twitz.TwitzApp.getContext().getActionMap(TwitzDesktopFrame.class, this);
	private Map<String, twitz.TwitzMainView> views = Collections.synchronizedMap(new TreeMap<String, twitz.TwitzMainView>());

    /** Creates new form TwitzDesktopFrame */
    private TwitzDesktopFrame(TwitzApp app) {
		this.mainApp = app;
        initComponents();
    }

	public TwitzDesktopFrame getInstance(TwitzApp app)
	{
		if(instance == null)
		{
			instance = new TwitzDesktopFrame(app);
		}
		return instance;
	}

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        desktop = new javax.swing.JDesktopPane();
        menuBar = new javax.swing.JMenuBar();
        javax.swing.JMenu fileMenu = new javax.swing.JMenu();
        javax.swing.JMenuItem exitMenuItem = new javax.swing.JMenuItem();
        editMenu = new javax.swing.JMenu();
        prefsMenuItem = new javax.swing.JMenuItem();
        javax.swing.JMenu helpMenu = new javax.swing.JMenu();
        javax.swing.JMenuItem aboutMenuItem = new javax.swing.JMenuItem();
        logsMenuItem = new javax.swing.JMenuItem();

        setDefaultCloseOperation(javax.swing.WindowConstants.DO_NOTHING_ON_CLOSE);
        setName("Form"); // NOI18N

        desktop.setName("desktop"); // NOI18N

        menuBar.setName("menuBar"); // NOI18N

        fileMenu.setText(resourceMap.getString("fileMenu.text")); // NOI18N
        fileMenu.setName("fileMenu"); // NOI18N

        exitMenuItem.setAction(actionMap.get("quit")); // NOI18N
        exitMenuItem.setIcon(null);
        exitMenuItem.setName("exitMenuItem"); // NOI18N
        fileMenu.add(exitMenuItem);

        menuBar.add(fileMenu);

        editMenu.setText(resourceMap.getString("editMenu.text")); // NOI18N
        editMenu.setName("editMenu"); // NOI18N

        prefsMenuItem.setAction(actionMap.get("showPrefsBox")); // NOI18N
        prefsMenuItem.setIcon(null);
        prefsMenuItem.setText(resourceMap.getString("prefsMenuItem.text")); // NOI18N
        prefsMenuItem.setName("prefsMenuItem"); // NOI18N
        editMenu.add(prefsMenuItem);

        menuBar.add(editMenu);

        helpMenu.setText(resourceMap.getString("helpMenu.text")); // NOI18N
        helpMenu.setName("helpMenu"); // NOI18N

        aboutMenuItem.setAction(actionMap.get("showAboutBox")); // NOI18N
        aboutMenuItem.setIcon(null);
        aboutMenuItem.setName("aboutMenuItem"); // NOI18N
        helpMenu.add(aboutMenuItem);

        logsMenuItem.setAction(actionMap.get("viewHTMLLog")); // NOI18N
        logsMenuItem.setIcon(null);
        logsMenuItem.setText(resourceMap.getString("logsMenuItem.text")); // NOI18N
        logsMenuItem.setName("logsMenuItem"); // NOI18N
        helpMenu.add(logsMenuItem);

        menuBar.add(helpMenu);

        setJMenuBar(menuBar);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(desktop, javax.swing.GroupLayout.DEFAULT_SIZE, 525, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(desktop, javax.swing.GroupLayout.DEFAULT_SIZE, 391, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

	@Action
    public void showAboutBox() {//{{{
        if (aboutBox == null) {
            //JFrame mainFrame = TwitzApp.getApplication().getMainFrame();
            aboutBox = new TwitzAboutBox(this);
            aboutBox.setLocationRelativeTo(this);
        }
        //TwitzApp.getApplication().show(aboutBox);
		aboutBox.setVisible(true);
    }//}}}

	@Action
	public void showPrefsBox() {//{{{
		if(prefs == null) {
			//JFrame mainFrame = TwitzApp.getApplication().getMainFrame();
			prefs = new PreferencesDialog(this, true, mainApp);
			prefs.addPropertyChangeListener(mainApp);
			prefs.setLocationRelativeTo(this);
		}
		prefs.setVisible(true);
	}//}}}

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JDesktopPane desktop;
    private javax.swing.JMenu editMenu;
    private javax.swing.JMenuItem logsMenuItem;
    private javax.swing.JMenuBar menuBar;
    private javax.swing.JMenuItem prefsMenuItem;
    // End of variables declaration//GEN-END:variables

	public void setDesktopPane(JDesktopPane desk)
	{
		JDesktopPane old = desktop;
		if(desk != null)
		{
			this.desktop = desk;
			firePropertyChange("desktopChanged", old, desk);
		}
	}

	public JDesktopPane getDesktopPane()
	{
		return this.desktop;
	}

	public void addView(String sessionName, twitz.TwitzMainView view)
	{
		if(view != null && sessionName != null && !sessionName.equals(""))
		{
			getDesktopPane().add(view);
			views.put(sessionName, view);
		}
	}

	public twitz.TwitzMainView getView(String sessionName)
	{
		twitz.TwitzMainView view = null;
		if(views.containsKey(sessionName))
			view = views.get(sessionName);
		return view;
	}

	public Map<String, twitz.TwitzMainView> getViews()
	{
		return views;
	}
}
