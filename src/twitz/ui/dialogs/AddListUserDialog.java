/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */

/*
 * AddListUserDialog.java
 *
 * Created on Jul 26, 2010, 9:59:59 PM
 */

package twitz.ui.dialogs;

import java.awt.Image;
import java.util.Collections;
import java.util.Iterator;
import java.util.Map;
import java.util.Set;
import java.util.TreeMap;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.DefaultComboBoxModel;
import javax.swing.DefaultListModel;
import javax.swing.ImageIcon;
import org.jdesktop.application.Action;
import org.jdesktop.swingx.autocomplete.AutoCompleteDecorator;
import org.tmatesoft.sqljet.core.SqlJetException;
import twitter4j.User;
import twitter4j.UserList;
import twitz.util.DBManager;
import twitz.util.UserStore;
import twitz.util.UserToStringConverter;

/**
 *
 * @author Andrew Williams
 */
public class AddListUserDialog extends javax.swing.JDialog {

	private org.jdesktop.application.ResourceMap resourceMap = twitz.TwitzApp.getContext().getResourceMap(AddListUserDialog.class);
	private javax.swing.ActionMap actionMap = twitz.TwitzApp.getContext().getActionMap(AddListUserDialog.class, this);
	private Map<String, UserList> userListMap = Collections.synchronizedMap(new TreeMap<String, UserList>());
	private DBManager DBM = DBManager.getInstance();
	private UserStore store = UserStore.getInstance();
	private User userToBeAdded;
	private UserList selectedList;
	public static enum Mode {
		USER_ADD,
		USER_DELETE,
		LIST_DELETE
	};

	private Mode mode;
	private boolean userSelect = false;

    /** Creates new form AddListUserDialog */
    public AddListUserDialog(java.awt.Frame parent, boolean modal) {
        super(parent, modal);
        initComponents();
		initDefaults();
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    private void initComponents() {//GEN-BEGIN:initComponents

        listPanel = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        jList1 = new javax.swing.JList();
        userPane = new javax.swing.JLayeredPane();
        cmbUser = new javax.swing.JComboBox();
        userLabel = new javax.swing.JLabel();
        actionPanel = new javax.swing.JPanel();
        actionToolBar = new javax.swing.JToolBar();
        btnAdd = new javax.swing.JButton();
        jSeparator1 = new javax.swing.JToolBar.Separator();
        btnCancel = new javax.swing.JButton();
        jPanel1 = new javax.swing.JPanel();
        titleLabel = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setMinimumSize(new java.awt.Dimension(266, 287));
        setModal(true);
        setName("AddListUserDialog"); // NOI18N
        setUndecorated(true);

        listPanel.setName("listPanel"); // NOI18N

        jScrollPane1.setName("jScrollPane1"); // NOI18N

        jList1.setModel(new javax.swing.AbstractListModel() {
            String[] strings = { "Item 1", "Item 2", "Item 3", "Item 4", "Item 5" };
            public int getSize() { return strings.length; }
            public Object getElementAt(int i) { return strings[i]; }
        });
        jList1.setCellRenderer(new twitz.ui.renderers.UserListRenderer());
        jList1.setName("jList1"); // NOI18N
        jScrollPane1.setViewportView(jList1);

        javax.swing.GroupLayout listPanelLayout = new javax.swing.GroupLayout(listPanel);
        listPanel.setLayout(listPanelLayout);
        listPanelLayout.setHorizontalGroup(
            listPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 242, Short.MAX_VALUE)
        );
        listPanelLayout.setVerticalGroup(
            listPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 160, Short.MAX_VALUE)
        );

        userPane.setName("userPane"); // NOI18N

        cmbUser.setEditable(true);
        cmbUser.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        cmbUser.setName("cmbUser"); // NOI18N
        cmbUser.setBounds(0, 0, 240, 32);
        userPane.add(cmbUser, javax.swing.JLayeredPane.DEFAULT_LAYER);

        
        userLabel.setIcon(resourceMap.getIcon("userLabel.icon")); // NOI18N
        userLabel.setText(resourceMap.getString("userLabel.text")); // NOI18N
        userLabel.setName("userLabel"); // NOI18N
        userLabel.setBounds(0, 0, 240, 34);
        userPane.add(userLabel, javax.swing.JLayeredPane.DEFAULT_LAYER);

        actionPanel.setName("actionPanel"); // NOI18N

        actionToolBar.setFloatable(false);
        actionToolBar.setRollover(true);
        actionToolBar.setName("actionToolBar"); // NOI18N

        
        btnAdd.setAction(actionMap.get("addListUser")); // NOI18N
        btnAdd.setIcon(resourceMap.getIcon("btnAdd.icon")); // NOI18N
        btnAdd.setText(resourceMap.getString("btnAdd.text")); // NOI18N
        btnAdd.setFocusable(false);
        btnAdd.setName("btnAdd"); // NOI18N
        actionToolBar.add(btnAdd);

        jSeparator1.setMaximumSize(new java.awt.Dimension(1000, 10));
        jSeparator1.setName("jSeparator1"); // NOI18N
        actionToolBar.add(jSeparator1);

        btnCancel.setAction(actionMap.get("cancelAddUser")); // NOI18N
        btnCancel.setIcon(resourceMap.getIcon("btnCancel.icon")); // NOI18N
        btnCancel.setText(resourceMap.getString("btnCancel.text")); // NOI18N
        btnCancel.setFocusable(false);
        btnCancel.setName("btnCancel"); // NOI18N
        actionToolBar.add(btnCancel);

        javax.swing.GroupLayout actionPanelLayout = new javax.swing.GroupLayout(actionPanel);
        actionPanel.setLayout(actionPanelLayout);
        actionPanelLayout.setHorizontalGroup(
            actionPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(actionToolBar, javax.swing.GroupLayout.DEFAULT_SIZE, 242, Short.MAX_VALUE)
        );
        actionPanelLayout.setVerticalGroup(
            actionPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(actionToolBar, javax.swing.GroupLayout.PREFERRED_SIZE, 22, javax.swing.GroupLayout.PREFERRED_SIZE)
        );

        jPanel1.setName("jPanel1"); // NOI18N

        titleLabel.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        titleLabel.setText(resourceMap.getString("titleLabel.text")); // NOI18N
        titleLabel.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        titleLabel.setName("titleLabel"); // NOI18N

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(titleLabel, javax.swing.GroupLayout.DEFAULT_SIZE, 242, Short.MAX_VALUE)
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(titleLabel, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 27, Short.MAX_VALUE)
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(listPanel, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(userPane, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 242, Short.MAX_VALUE)
                    .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(actionPanel, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(9, 9, 9)
                .addComponent(userPane, javax.swing.GroupLayout.PREFERRED_SIZE, 27, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(listPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(actionPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        pack();
    }//GEN-END:initComponents

	private void initDefaults()
	{
		twitz.TwitzMainView.fixJScrollPaneBarsSize(jScrollPane1);
		DefaultComboBoxModel cmod = new DefaultComboBoxModel(store.getRegisteredUsers());
		cmbUser.setModel(cmod);
		cmbUser.setRenderer(new twitz.ui.renderers.UserComboRenderer());
		cmbUser.setEditable(true);
		AutoCompleteDecorator.decorate(cmbUser, new UserToStringConverter());
		//userPanel.add(cmbUser);
		setMode(Mode.USER_ADD);
		cmbUser.setVisible(false);
		userPane.moveToFront(userLabel);
		userPane.moveToBack(cmbUser);
	}

	@Action
	public void addListUser()
	{
		Object v = jList1.getSelectedValue();
		if(v instanceof UserList)
		{
			this.selectedList = (UserList)v;
		}
		else
		{
			this.selectedList = null;
		}
		if(userSelect)
		{
			Object u = cmbUser.getSelectedItem();
			if (u instanceof User)
			{
				this.userToBeAdded = (User) u;
			}
		}
		this.dispose();
	}

	@Action
	public void cancelAddUser()
	{
		this.selectedList = null;
		this.dispose();
	}

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JPanel actionPanel;
    private javax.swing.JToolBar actionToolBar;
    private javax.swing.JButton btnAdd;
    private javax.swing.JButton btnCancel;
    private javax.swing.JComboBox cmbUser;
    private javax.swing.JList jList1;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JToolBar.Separator jSeparator1;
    private javax.swing.JPanel listPanel;
    private javax.swing.JLabel titleLabel;
    private javax.swing.JLabel userLabel;
    private javax.swing.JLayeredPane userPane;
    // End of variables declaration//GEN-END:variables

	public void setUserListMap(Map<String, UserList> map)
	{
		if(map != null)
		{
			this.userListMap = map;
			DefaultListModel model = new DefaultListModel();
			model.clear();
			Set<String> set = map.keySet();
			Iterator<String> iter = set.iterator();
			while (iter.hasNext())
			{
				String string = iter.next();
				model.addElement(map.get(string));
			}
			jList1.setModel(model);
		}
	}

	public void setUser(User user)
	{
		if(user != null)
		{
			this.userToBeAdded = user;
			java.net.URL imgURI = twitz.TwitzApp.verifyImage(user.getProfileImageURL());
			javax.swing.ImageIcon icon = new javax.swing.ImageIcon(imgURI);
			int status = icon.getImageLoadStatus();

			Image img = icon.getImage().getScaledInstance(32, 32, java.awt.Image.SCALE_SMOOTH);
			icon = new ImageIcon(img);
			//ImageIcon icon = new ImageIcon(twitz.TwitzApp.verifyImage(user.getProfileImageURL()));
			userLabel.setIcon(icon);
			userLabel.setText(user.getScreenName());
			setSelectedMode(false);
		}
	}

	public User getUser()
	{
		return this.userToBeAdded;
	}

	public UserList getSelectedUserList()
	{
		return this.selectedList;
	}

	public void setSelectedUserList(UserList userList)
	{
		jList1.setSelectedValue(userList, true);
		this.selectedList = userList;
	}

	public void setButtonText(String string)
	{
		btnAdd.setText(string);
	}

	public void setMode(Mode value)
	{
		switch(value)
		{
			case USER_DELETE:
				titleLabel.setText(resourceMap.getString("titleLabel.delete.text"));
				btnAdd.setText(resourceMap.getString("btnAdd.delete.text"));
				btnAdd.setIcon(resourceMap.getImageIcon("btnAdd.delete.icon"));
				userPane.setVisible(true);
				mode = value;
			break;
			case USER_ADD:
				titleLabel.setText(resourceMap.getString("titleLabel.text"));
				btnAdd.setText(resourceMap.getString("btnAdd.text"));
				btnAdd.setIcon(resourceMap.getImageIcon("btnAdd.icon"));
				userPane.setVisible(true);
				mode = value;
			break;
			case LIST_DELETE:
				titleLabel.setText(resourceMap.getString("titleLabel.list_delete.text"));
				btnAdd.setText(resourceMap.getString("btnAdd.delete.text"));
				btnAdd.setIcon(resourceMap.getImageIcon("btnAdd.delete.icon"));
				userPane.setVisible(false);
				mode = value;
			break;
		}
	}

	public void setButtonIcon(ImageIcon imageIcon)
	{
		btnAdd.setIcon(imageIcon);
	}

	public void setSelectedMode(boolean b)
	{
		userLabel.setVisible(!b);
		cmbUser.setVisible(b);
		userSelect = b;
		//titleLabel.setText(resourceMap.getString("titleLabel.text"));

		if(b)
		{
			//titleLabel.setText(resourceMap.getString("titleLabel.delete.text"));
			DefaultComboBoxModel cmod = new DefaultComboBoxModel(store.getRegisteredUsers());
			cmbUser.setModel(cmod);
			userPane.moveToFront(cmbUser);
		}

	}

	public void reset()
	{
		this.selectedList = null;
		this.userToBeAdded = null;
		setMode(Mode.USER_ADD);
		cmbUser.setVisible(false);
		userPane.moveToFront(userLabel);
		userPane.moveToBack(cmbUser);
	}
}
