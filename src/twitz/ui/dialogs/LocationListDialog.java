/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */

/*
 * LocationListDialog.java
 *
 * Created on Jun 27, 2010, 1:16:52 AM
 */

package twitz.ui.dialogs;

import java.awt.Frame;
import java.awt.GraphicsEnvironment;
import java.awt.Rectangle;
import java.awt.event.WindowEvent;
import java.awt.event.WindowFocusListener;
import java.util.ArrayList;
import java.util.Date;
import java.util.Map;
import java.util.TreeMap;
import javax.swing.JDialog;
import javax.swing.JList;
import javax.swing.event.ListSelectionEvent;
import javax.swing.event.ListSelectionListener;
import org.jdesktop.application.Action;
import twitz.events.DefaultTwitzEventModel;
import twitz.events.TwitzEvent;
import twitz.events.TwitzEventModel;
import twitz.events.TwitzEventType;
import twitz.events.TwitzListener;

/**
 *
 * @author mistik1
 */
public class LocationListDialog extends JDialog implements TwitzEventModel {

    /** Creates new form LocationListDialog */
    public LocationListDialog(Frame caller) {
		super(caller, true);
		this.caller = caller;
        initComponents();
		initDefaults();
    }

	private void initDefaults()
	{
		ListSelectionListener listener = new ListSelectionListener() {

			public void valueChanged(ListSelectionEvent e)
			{
				JList list = (JList)e.getSource();
				Map map = new TreeMap();
				map.put("async", true);
				map.put("caller", this);
				ArrayList args = new ArrayList();
				//Get the woid from the location in this list. maybe need a custom model here
				args.add(1);
				map.put("arguments", args);
				TwitzEvent te = new TwitzEvent(this, TwitzEventType.LOCATION_TRENDS, new Date().getTime(), map);
				fireTwitzEvent(te);
				//closeBox();
				//throw new UnsupportedOperationException("Not supported yet.");
			}
		};
		countriesList.setPrototypeCellValue("01234567891234567890");
		countriesList.addListSelectionListener(listener);
		citiesList.setPrototypeCellValue("01234567891234567890");
		citiesList.addListSelectionListener(listener);
		this.setUndecorated(true);
		this.addWindowFocusListener(new WindowFocusListener(){

			public void windowGainedFocus(WindowEvent e)
			{
				fixLocation();
				//throw new UnsupportedOperationException("Not supported yet.");
			}

			public void windowLostFocus(WindowEvent e)
			{
				//throw new UnsupportedOperationException("Not supported yet.");
			}
		});
	}

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked") //{{{
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        countryPanel = new javax.swing.JPanel();
        lblCountry = new javax.swing.JLabel();
        countryScrollPane = new javax.swing.JScrollPane();
        countriesList = new javax.swing.JList();
        cityPanel = new javax.swing.JPanel();
        lblCity = new javax.swing.JLabel();
        cityScrollPane = new javax.swing.JScrollPane();
        citiesList = new javax.swing.JList();
        buttonPanel = new javax.swing.JPanel();
        btnDone = new javax.swing.JButton();

        setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        setFont(resourceMap.getFont("TrendsListPane.font")); // NOI18N
        setMinimumSize(new java.awt.Dimension(500, 300));
        setModal(true);
        setName("TrendsListPane"); // NOI18N
        setUndecorated(true);

        countryPanel.setName("countryPanel"); // NOI18N
        countryPanel.setLayout(new java.awt.BorderLayout(0, 3));

        lblCountry.setIcon(resourceMap.getIcon("lblCountry.icon")); // NOI18N
        lblCountry.setText(resourceMap.getString("lblCountry.text")); // NOI18N
        lblCountry.setName("lblCountry"); // NOI18N
        countryPanel.add(lblCountry, java.awt.BorderLayout.NORTH);

        countryScrollPane.setBorder(null);
        countryScrollPane.setHorizontalScrollBarPolicy(javax.swing.ScrollPaneConstants.HORIZONTAL_SCROLLBAR_NEVER);
        countryScrollPane.setMinimumSize(new java.awt.Dimension(21, 100));
        countryScrollPane.setName("countryScrollPane"); // NOI18N
        countryScrollPane.setPreferredSize(new java.awt.Dimension(208, 100));

        countriesList.setModel(new javax.swing.AbstractListModel() {
            String[] strings = { "United States", "Germany", "Italy", "United Kingdom", "Mexico", "Brazil", "Canada", "Ireland" };
            public int getSize() { return strings.length; }
            public Object getElementAt(int i) { return strings[i]; }
        });
        countriesList.setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);
        countriesList.setCellRenderer(new twitz.ui.renderers.LocationListRenderer(true));
        countriesList.setLayoutOrientation(javax.swing.JList.HORIZONTAL_WRAP);
        countriesList.setName("countriesList"); // NOI18N
        countriesList.setVisibleRowCount(4);
        countryScrollPane.setViewportView(countriesList);

        countryPanel.add(countryScrollPane, java.awt.BorderLayout.CENTER);

        getContentPane().add(countryPanel, java.awt.BorderLayout.PAGE_START);

        cityPanel.setName("cityPanel"); // NOI18N
        cityPanel.setLayout(new java.awt.BorderLayout(0, 3));

        lblCity.setIcon(resourceMap.getIcon("lblCity.icon")); // NOI18N
        lblCity.setText(resourceMap.getString("lblCity.text")); // NOI18N
        lblCity.setHorizontalTextPosition(javax.swing.SwingConstants.RIGHT);
        lblCity.setName("lblCity"); // NOI18N
        cityPanel.add(lblCity, java.awt.BorderLayout.NORTH);

        cityScrollPane.setBorder(null);
        cityScrollPane.setHorizontalScrollBarPolicy(javax.swing.ScrollPaneConstants.HORIZONTAL_SCROLLBAR_NEVER);
        cityScrollPane.setName("cityScrollPane"); // NOI18N
        cityScrollPane.setPreferredSize(new java.awt.Dimension(315, 100));

        citiesList.setModel(new javax.swing.AbstractListModel() {
            String[] strings = { "Atlanta", "Baltimore", "Boston", "Chicago", "Dallas-Ft. Worth", "Houston", "London", "Los Angeles", "New York City", "Philadelphia", "San Antonio", "San Francisco", "Seattle", "Sao Paulo", "Washinton D.C." };
            public int getSize() { return strings.length; }
            public Object getElementAt(int i) { return strings[i]; }
        });
        citiesList.setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);
        citiesList.setCellRenderer(new twitz.ui.renderers.LocationListRenderer(false));
        citiesList.setLayoutOrientation(javax.swing.JList.HORIZONTAL_WRAP);
        citiesList.setName("citiesList"); // NOI18N
        citiesList.setVisibleRowCount(5);
        cityScrollPane.setViewportView(citiesList);

        cityPanel.add(cityScrollPane, java.awt.BorderLayout.CENTER);

        getContentPane().add(cityPanel, java.awt.BorderLayout.CENTER);

        buttonPanel.setName("buttonPanel"); // NOI18N
        buttonPanel.setLayout(new java.awt.FlowLayout(java.awt.FlowLayout.LEFT));

        btnDone.setAction(actionMap.get("closeBox")); // NOI18N
        btnDone.setText(resourceMap.getString("btnDone.text")); // NOI18N
        btnDone.setName("btnDone"); // NOI18N
        buttonPanel.add(btnDone);

        getContentPane().add(buttonPanel, java.awt.BorderLayout.SOUTH);
    }// </editor-fold>//GEN-END:initComponents
	//}}}
	
	@Action
	public void closeBox()
	{
		this.setVisible(false);
	}

	public void setDismssOnClick(boolean b) {
		this.dismissOnClick = b;
	}

	public boolean getDismissOnClick() {
		return this.dismissOnClick;
	}
	
	public void popupBox(int x, int y) {
		this.setLocation(x, y);
		this.setVisible(true);
		//fixLocation();
	}
	
	private void fixLocation()
	{
		twitz.TwitzApp.fixLocation(this);
	}

	private void fixLocationBake() {//{{{
		GraphicsEnvironment ge = GraphicsEnvironment.getLocalGraphicsEnvironment();
		Rectangle frame = getBounds();
		Rectangle desktop = ge.getMaximumWindowBounds();
		System.out.println("Width of desktop: " + desktop.toString());
		System.out.println("Width of frame: " + frame.toString());
		//int x = (desk.width - frame.width);
		Direction move = null;
		boolean up = false;
		boolean down = false;
		boolean left = false;
		boolean right = false;
		//Check if we intersect with the Desktop rectangle before we process
		if(!desktop.contains(frame.x, frame.y, frame.width, frame.height)) {
			int x = frame.x;//(desktop.width - frame.width);
			int y = frame.y;//(desktop.height - frame.height) - 32;
			if((frame.x+frame.width) > desktop.width)
				left = true;
			if(desktop.x > frame.x) //Frame top should be less than desktop
				right = true;
			if(desktop.y > frame.y)
				down = true;
			if((frame.y+frame.height) > desktop.height) //Frame bottom should be less than desktop
				up = true;
			if(left) x = (desktop.width - frame.width);
			if(right) x = desktop.x;
			if(down) y = desktop.y;
			if(up) y = (desktop.height - frame.height) - 32;//-32 is to make up for most OS toolbars
			//System.out.println("X: " + x + " Y: " + y);
			setLocation(x, y);
		}
	}//}}}

	public void addTwitzListener(TwitzListener o)
	{
		dtem.addTwitzListener(o);
	}

	public void removeTwitzListener(TwitzListener o)
	{
		dtem.removeTwitzListener(o);
	}

	public void fireTwitzEvent(TwitzEvent e)
	{
		dtem.fireTwitzEvent(e);
	}

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnDone;
    private javax.swing.JPanel buttonPanel;
    private javax.swing.JList citiesList;
    private javax.swing.JPanel cityPanel;
    private javax.swing.JScrollPane cityScrollPane;
    private javax.swing.JList countriesList;
    private javax.swing.JPanel countryPanel;
    private javax.swing.JScrollPane countryScrollPane;
    private javax.swing.JLabel lblCity;
    private javax.swing.JLabel lblCountry;
    // End of variables declaration//GEN-END:variables

	javax.swing.ActionMap actionMap = twitz.TwitzApp.getContext().getActionMap(LocationListDialog.class, this);
	org.jdesktop.application.ResourceMap resourceMap = twitz.TwitzApp.getContext().getResourceMap(LocationListDialog.class);
	private DefaultTwitzEventModel dtem = new DefaultTwitzEventModel();
	Frame caller;
	boolean dismissOnClick = true;
	private enum Direction { LEFT, RIGHT, UP, DOWN };

}
