/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */

/*
 * StatusPopupPanel.java
 *
 * Created on Jul 11, 2010, 9:36:05 PM
 */

package twitz.ui.dialogs;

import java.awt.Font;
import java.awt.Image;
import java.awt.MediaTracker;
import java.awt.event.WindowAdapter;
import java.awt.event.WindowEvent;
import java.awt.event.WindowFocusListener;
import java.net.URL;
import java.util.ArrayList;
import java.util.Collections;
import java.util.Date;
import java.util.Map;
import java.util.TreeMap;
import java.util.regex.Matcher;
import java.util.regex.Pattern;
import javax.swing.BorderFactory;
import javax.swing.ImageIcon;
import javax.swing.JDialog;
import javax.swing.JLabel;
import javax.swing.JList;
import javax.swing.border.BevelBorder;
import javax.swing.border.Border;
import javax.swing.border.SoftBevelBorder;
import javax.swing.border.TitledBorder;
import org.apache.log4j.Logger;
import org.jdesktop.application.Action;
import org.jdesktop.application.ResourceMap;
import twitter4j.Place;
import twitter4j.Status;
import twitter4j.User;
import twitter4j.util.TimeSpanUtil;
import twitz.TwitzApp;
import twitz.TwitzMainView;
import twitz.events.DefaultTwitzEventModel;
import twitz.events.TwitzEvent;
import twitz.events.TwitzEventModel;
import twitz.events.TwitzEventType;
import twitz.events.TwitzListener;
import twitz.util.SettingsManager;

/**
 *
 * @author mistik1
 */
public class StatusPopupPanel extends JDialog implements TwitzEventModel {

	private Status status;
	private DefaultTwitzEventModel dtem = new DefaultTwitzEventModel();
	private SettingsManager config = SettingsManager.getInstance();
	javax.swing.ActionMap actionMap = twitz.TwitzApp.getContext().getActionMap(StatusPopupPanel.class, this);
	org.jdesktop.application.ResourceMap resourceMap = twitz.TwitzApp.getContext().getResourceMap(StatusPopupPanel.class);
	private String statusTitle = resourceMap.getString("StatusListPanel.border.title");

	private final Logger logger = Logger.getLogger(this.getClass().getName());
	private boolean logdebug = logger.isDebugEnabled();

    /** Creates new form StatusPopupPanel */
    public StatusPopupPanel() {
        initComponents();
		initDefaults();
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")//{{{
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        actionsToolBar = new javax.swing.JToolBar();
        btnDismiss = new javax.swing.JButton();
        btnRetweet = new javax.swing.JButton();
        btnReplyTo = new javax.swing.JButton();
        btnDelete = new javax.swing.JButton();
        lblRetweet = new javax.swing.JLabel();
        lblFav = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        setIconImage(null);
        setMinimumSize(new java.awt.Dimension(25, 124));
        setName("StatusPopupBox"); // NOI18N
        setUndecorated(true);
        getContentPane().setLayout(new java.awt.GridLayout(1, 1));

        actionsToolBar.setFloatable(false);
        actionsToolBar.setOrientation(1);
        actionsToolBar.setRollover(true);
        actionsToolBar.setMaximumSize(new java.awt.Dimension(24, 124));
        actionsToolBar.setMinimumSize(new java.awt.Dimension(24, 90));
        actionsToolBar.setName("actionsToolBar"); // NOI18N
        actionsToolBar.setOpaque(false);
        actionsToolBar.setPreferredSize(new java.awt.Dimension(24, 120));

        btnDismiss.setAction(actionMap.get("closeBox")); // NOI18N
        btnDismiss.setIcon(resourceMap.getIcon("btnDismiss.icon")); // NOI18N
        btnDismiss.setText(resourceMap.getString("btnDismiss.text")); // NOI18N
        btnDismiss.setToolTipText(resourceMap.getString("btnDismiss.toolTipText")); // NOI18N
        btnDismiss.setFocusable(false);
        btnDismiss.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        btnDismiss.setMaximumSize(new java.awt.Dimension(20, 20));
        btnDismiss.setName("btnDismiss"); // NOI18N
        btnDismiss.setPreferredSize(new java.awt.Dimension(20, 20));
        btnDismiss.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        actionsToolBar.add(btnDismiss);

        btnRetweet.setAction(actionMap.get("retweetStatus")); // NOI18N
        btnRetweet.setIcon(resourceMap.getIcon("btnRetweet.icon")); // NOI18N
        btnRetweet.setToolTipText(resourceMap.getString("btnRetweet.toolTipText")); // NOI18N
        btnRetweet.setFocusable(false);
        btnRetweet.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        btnRetweet.setMaximumSize(new java.awt.Dimension(20, 20));
        btnRetweet.setName("btnRetweet"); // NOI18N
        btnRetweet.setOpaque(false);
        btnRetweet.setPreferredSize(new java.awt.Dimension(20, 20));
        actionsToolBar.add(btnRetweet);

        btnReplyTo.setAction(actionMap.get("replyToStatus")); // NOI18N
        btnReplyTo.setIcon(resourceMap.getIcon("btnReplyTo.icon")); // NOI18N
        btnReplyTo.setToolTipText(resourceMap.getString("btnReplyTo.toolTipText")); // NOI18N
        btnReplyTo.setFocusable(false);
        btnReplyTo.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        btnReplyTo.setMaximumSize(new java.awt.Dimension(20, 20));
        btnReplyTo.setName("btnReplyTo"); // NOI18N
        btnReplyTo.setOpaque(false);
        btnReplyTo.setPreferredSize(new java.awt.Dimension(20, 20));
        actionsToolBar.add(btnReplyTo);

        btnDelete.setAction(actionMap.get("deleteStatus")); // NOI18N
        btnDelete.setIcon(resourceMap.getIcon("btnDelete.icon")); // NOI18N
        btnDelete.setToolTipText(resourceMap.getString("btnDelete.toolTipText")); // NOI18N
        btnDelete.setFocusable(false);
        btnDelete.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        btnDelete.setMaximumSize(new java.awt.Dimension(20, 20));
        btnDelete.setName("btnDelete"); // NOI18N
        btnDelete.setPreferredSize(new java.awt.Dimension(20, 20));
        actionsToolBar.add(btnDelete);

        lblRetweet.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lblRetweet.setIcon(resourceMap.getIcon("lblRetweet.icon")); // NOI18N
        lblRetweet.setToolTipText(resourceMap.getString("lblRetweet.toolTipText")); // NOI18N
        lblRetweet.setBorder(javax.swing.BorderFactory.createEmptyBorder(1, 2, 1, 1));
        lblRetweet.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        lblRetweet.setIconTextGap(0);
        lblRetweet.setName("lblRetweet"); // NOI18N
        lblRetweet.setPreferredSize(new java.awt.Dimension(22, 22));
        actionsToolBar.add(lblRetweet);

        lblFav.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lblFav.setIcon(resourceMap.getIcon("lblFav.icon")); // NOI18N
        lblFav.setToolTipText(resourceMap.getString("lblFav.toolTipText")); // NOI18N
        lblFav.setBorder(javax.swing.BorderFactory.createEmptyBorder(1, 2, 1, 1));
        lblFav.setName("lblFav"); // NOI18N
        lblFav.setPreferredSize(new java.awt.Dimension(22, 22));
        actionsToolBar.add(lblFav);

        getContentPane().add(actionsToolBar);
    }// </editor-fold>//GEN-END:initComponents
//}}}

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JToolBar actionsToolBar;
    private javax.swing.JButton btnDelete;
    private javax.swing.JButton btnDismiss;
    private javax.swing.JButton btnReplyTo;
    private javax.swing.JButton btnRetweet;
    private javax.swing.JLabel lblFav;
    private javax.swing.JLabel lblRetweet;
    // End of variables declaration//GEN-END:variables

	private void initDefaults()//{{{
	{
		WindowFocusListener wfl = new WindowAdapter(){

			@Override
			public void windowGainedFocus(WindowEvent e)
			{
				fixLocation();
			}

			@Override
			public void windowLostFocus(WindowEvent e)
			{
				closeBox();
			}

		};
		this.addWindowFocusListener(wfl);
	}//}}}

	private void fixLocation()
	{
		twitz.TwitzApp.fixLocation(this);
	}

	@Action
	public void retweetStatus()//{{{
	{
		if(logdebug)
			logger.debug("Sending retweet");
		Map map = Collections.synchronizedMap(new TreeMap());
		map.put("async", true);
		map.put("caller", this);
		ArrayList args = new ArrayList();
		args.add(getStatus().getId());
		map.put("arguments", args);
		TwitzEvent te = new TwitzEvent(this, TwitzEventType.RETWEET_STATUS, new Date().getTime(), map);
		fireTwitzEvent(te);
		closeBox();
	}//}}}

	@Action
	public void deleteStatus()//{{{
	{
		if(logdebug)
			logger.debug("Sending delete status request");
		Map map = Collections.synchronizedMap(new TreeMap());
		map.put("async", true);
		map.put("caller", this);
		ArrayList args = new ArrayList();
		args.add(getStatus().getId());
		map.put("arguments", args);
		TwitzEvent te = new TwitzEvent(this, TwitzEventType.DESTROY_STATUS, new Date().getTime(), map);
		fireTwitzEvent(te);
		closeBox();
	}//}}}

	@Action
	public void replyToStatus()
	{
		if(logdebug)
			logger.debug("Sending reply to Status");
		closeBox();
	}

	@Action
	public void closeBox()
	{
		dispose();
	}

	public void setStatus(Status stat)//{{{
	{
		if(stat != null)
		{
			this.status = stat;
		}
	}//}}}

	public Status getStatus()//{{{
	{
		return this.status;
	}//}}}

	public void addTwitzListener(TwitzListener o)
	{
		dtem.addTwitzListener(o);
	}

	public void removeTwitzListener(TwitzListener o)
	{
		dtem.removeTwitzListener(o);
	}

	public void fireTwitzEvent(TwitzEvent e)
	{
		dtem.fireTwitzEvent(e);
	}

	private void fixButtons(Status s)//{{{
	{
		btnDelete.setEnabled(s.getUser().getScreenName().equals(config.getString("twitter_id")));
		btnRetweet.setEnabled(s.getUser().getScreenName().equals(config.getString("twitter_id")));
		btnReplyTo.setEnabled(!s.getUser().getScreenName().equals(config.getString("twitter_id")));
		lblRetweet.setEnabled(s.isRetweet());
		lblFav.setEnabled(s.isFavorited());
	}//}}}

	private String tableWrap(String source/*, int width*/) {//{{{
		StringBuffer table = new StringBuffer("<table border=0 width=\"90%\"");
		/*table.append(width+"");*/
		table.append("><tr><td>");
		table.append(source);
		table.append("</td></tr></table>");
		return table.toString();
	}//}}}

	private String pretify(Status stat, String text)//{{{
	{
		ArrayList<String> list = new ArrayList<String>();
		String rv = "";
		String left = "<strong><font color=\"blue\">";
		String right = "</font></strong>";
		Pattern p = Pattern.compile("([#@]\\w+?)\\s");
		Matcher m = p.matcher(text);
		while(m.find())
		{
			list.add(m.group());
		}
		String t = text;
		for(String s:list)
		{
			t = t.replaceAll(s, left+s+right);
		}
		rv = t;
		return rv;
	} //}}}

	public void configureBox(JList list, Object value, int index)//{{{
	{
		Status s = (Status)value;

		setStatus(s);

		fixButtons(s);
		addTwitzListener(TwitzMainView.getInstance());
	}//}}}

	public void popupBox(int x, int y) {
		java.awt.Rectangle rect = getBounds();
		if(rect != null)
			this.setLocation(x, y-rect.height);
		else
			this.setLocation(x, y);
		this.setVisible(true);
		//fixLocation();
	}

	
}
